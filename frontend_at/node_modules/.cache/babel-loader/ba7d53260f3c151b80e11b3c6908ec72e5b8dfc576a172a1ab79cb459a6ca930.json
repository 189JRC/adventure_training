{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.msg, provider => {\n    return _openBlock(), _createElementBlock(\"h1\", null, _toDisplayString(provider.company_name), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */)), _createTextVNode(\" json = \" + _toDisplayString($data.msg), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","msg","provider","_toDisplayString","company_name"],"sources":["/home/ouroboros/Web_dev/FLASK/3flask/frontend/vue_at/src/components/Providers.vue"],"sourcesContent":["<template>\n  <div>\n    <h1 v-for=\"provider in msg\">\n        {{provider.company_name}}\n    </h1>\n    json = {{ msg }}\n  </div>\n</template>\n\n<script>\n\nimport axios from 'axios';\n\nexport default {\n    name: 'thread',\n    data() {\n        return {\n            msg: this.getResponse(),\n        }\n    },\n    methods: {\n        getResponse() {\n            const path = 'http://localhost:5000/providers_data';\n            axios.get(path)\n            .then ((res) => {\n                console.log(res.data)\n                this.msg = res.data\n            })\n            .catch ((err) => {\n                console.log(err)\n            })\n        },\n    },\n    created(){\n        this.getResponse();\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;uBACEA,mBAAA,CAKM,e,kBAJJA,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAFkBC,KAAA,CAAAC,GAAG,EAAfC,QAAQ;yBAAnBL,mBAAA,CAEK,YAAAM,gBAAA,CADCD,QAAQ,CAACE,YAAY;qDACtB,UACE,GAAAD,gBAAA,CAAGH,KAAA,CAAAC,GAAG,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}